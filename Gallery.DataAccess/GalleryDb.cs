

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Gallery.DataAccess\App.config"
//     Connection String Name: "DefaultConnection"
//     Connection String:      "Data Source=localhost\sqlexpress;User ID=sa;password=**zapped**;;Initial Catalog=Gallery"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.62
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Gallery.DataAccess
{

    #region Unit of work

    public interface IGalleryDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Branch> Branches { get; set; } // Branch
        System.Data.Entity.DbSet<ComplaintType> ComplaintTypes { get; set; } // ComplaintType
        System.Data.Entity.DbSet<Configuration> Configurations { get; set; } // Configuration
        System.Data.Entity.DbSet<Country> Countries { get; set; } // Country
        System.Data.Entity.DbSet<CustomerVisitCategory> CustomerVisitCategories { get; set; } // CustomerVisitCategory
        System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        System.Data.Entity.DbSet<EmployeeVisitCategory> EmployeeVisitCategories { get; set; } // EmployeeVisitCategory
        System.Data.Entity.DbSet<EmployeeVisitResponse> EmployeeVisitResponses { get; set; } // EmployeeVisitResponse
        System.Data.Entity.DbSet<FactAgent> FactAgents { get; set; } // FactAgent
        System.Data.Entity.DbSet<FactCustomer> FactCustomers { get; set; } // FactCustomer
        System.Data.Entity.DbSet<FactProduct> FactProducts { get; set; } // FactProduct
        System.Data.Entity.DbSet<Fee> Fees { get; set; } // Fee
        System.Data.Entity.DbSet<Menu> Menus { get; set; } // Menu
        System.Data.Entity.DbSet<Project> Projects { get; set; } // Project
        System.Data.Entity.DbSet<Region> Regions { get; set; } // Region
        System.Data.Entity.DbSet<Role> Roles { get; set; } // Role
        System.Data.Entity.DbSet<Taxonomy> Taxonomies { get; set; } // Taxonomy
        System.Data.Entity.DbSet<Unit> Units { get; set; } // Unit
        System.Data.Entity.DbSet<UserLogin> UserLogins { get; set; } // UserLogin

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    public partial class GalleryDbContext : System.Data.Entity.DbContext, IGalleryDbContext
    {
        public System.Data.Entity.DbSet<Branch> Branches { get; set; } // Branch
        public System.Data.Entity.DbSet<ComplaintType> ComplaintTypes { get; set; } // ComplaintType
        public System.Data.Entity.DbSet<Configuration> Configurations { get; set; } // Configuration
        public System.Data.Entity.DbSet<Country> Countries { get; set; } // Country
        public System.Data.Entity.DbSet<CustomerVisitCategory> CustomerVisitCategories { get; set; } // CustomerVisitCategory
        public System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        public System.Data.Entity.DbSet<EmployeeVisitCategory> EmployeeVisitCategories { get; set; } // EmployeeVisitCategory
        public System.Data.Entity.DbSet<EmployeeVisitResponse> EmployeeVisitResponses { get; set; } // EmployeeVisitResponse
        public System.Data.Entity.DbSet<FactAgent> FactAgents { get; set; } // FactAgent
        public System.Data.Entity.DbSet<FactCustomer> FactCustomers { get; set; } // FactCustomer
        public System.Data.Entity.DbSet<FactProduct> FactProducts { get; set; } // FactProduct
        public System.Data.Entity.DbSet<Fee> Fees { get; set; } // Fee
        public System.Data.Entity.DbSet<Menu> Menus { get; set; } // Menu
        public System.Data.Entity.DbSet<Project> Projects { get; set; } // Project
        public System.Data.Entity.DbSet<Region> Regions { get; set; } // Region
        public System.Data.Entity.DbSet<Role> Roles { get; set; } // Role
        public System.Data.Entity.DbSet<Taxonomy> Taxonomies { get; set; } // Taxonomy
        public System.Data.Entity.DbSet<Unit> Units { get; set; } // Unit
        public System.Data.Entity.DbSet<UserLogin> UserLogins { get; set; } // UserLogin

        static GalleryDbContext()
        {
            System.Data.Entity.Database.SetInitializer<GalleryDbContext>(null);
            GalleryDbContextStaticPartial(); // Create the following method in your partial class: private static void GalleryDbContextStaticPartial() { }
        }

        public GalleryDbContext()
            : base("Name=DefaultConnection")
        {
            InitializePartial();
        }

        public GalleryDbContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public GalleryDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public GalleryDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public GalleryDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new BranchConfiguration());
            modelBuilder.Configurations.Add(new ComplaintTypeConfiguration());
            modelBuilder.Configurations.Add(new ConfigurationConfiguration());
            modelBuilder.Configurations.Add(new CountryConfiguration());
            modelBuilder.Configurations.Add(new CustomerVisitCategoryConfiguration());
            modelBuilder.Configurations.Add(new EmployeeConfiguration());
            modelBuilder.Configurations.Add(new EmployeeVisitCategoryConfiguration());
            modelBuilder.Configurations.Add(new EmployeeVisitResponseConfiguration());
            modelBuilder.Configurations.Add(new FactAgentConfiguration());
            modelBuilder.Configurations.Add(new FactCustomerConfiguration());
            modelBuilder.Configurations.Add(new FactProductConfiguration());
            modelBuilder.Configurations.Add(new FeeConfiguration());
            modelBuilder.Configurations.Add(new MenuConfiguration());
            modelBuilder.Configurations.Add(new ProjectConfiguration());
            modelBuilder.Configurations.Add(new RegionConfiguration());
            modelBuilder.Configurations.Add(new RoleConfiguration());
            modelBuilder.Configurations.Add(new TaxonomyConfiguration());
            modelBuilder.Configurations.Add(new UnitConfiguration());
            modelBuilder.Configurations.Add(new UserLoginConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new BranchConfiguration(schema));
            modelBuilder.Configurations.Add(new ComplaintTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ConfigurationConfiguration(schema));
            modelBuilder.Configurations.Add(new CountryConfiguration(schema));
            modelBuilder.Configurations.Add(new CustomerVisitCategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeVisitCategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeVisitResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new FactAgentConfiguration(schema));
            modelBuilder.Configurations.Add(new FactCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new FactProductConfiguration(schema));
            modelBuilder.Configurations.Add(new FeeConfiguration(schema));
            modelBuilder.Configurations.Add(new MenuConfiguration(schema));
            modelBuilder.Configurations.Add(new ProjectConfiguration(schema));
            modelBuilder.Configurations.Add(new RegionConfiguration(schema));
            modelBuilder.Configurations.Add(new RoleConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxonomyConfiguration(schema));
            modelBuilder.Configurations.Add(new UnitConfiguration(schema));
            modelBuilder.Configurations.Add(new UserLoginConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region POCO classes

    // Branch
    public partial class Branch
    {
        public long Id { get; set; } // Id (Primary key)
        public string BranchCode { get; set; } // BranchCode (length: 10)
        public string Description { get; set; } // Description (length: 100)
        public string Address1 { get; set; } // Address1 (length: 500)
        public string Address2 { get; set; } // Address2 (length: 500)
        public string PostalCode { get; set; } // PostalCode (length: 10)
        public string Phone1 { get; set; } // Phone1 (length: 20)
        public string Phone2 { get; set; } // Phone2 (length: 20)
        public string Email1 { get; set; } // Email1 (length: 100)
        public string Email2 { get; set; } // Email2 (length: 100)
        public bool Active { get; set; } // Active
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Employee> Employees { get; set; } // Employee.FK_Employee_Branch

        public Branch()
        {
            Active = true;
            Employees = new System.Collections.Generic.List<Employee>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ComplaintType
    public partial class ComplaintType
    {
        public long Id { get; set; } // Id (Primary key)
        public string Description { get; set; } // Description (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 30)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 30)

        public ComplaintType()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Configuration
    public partial class Configuration
    {
        public string Key { get; set; } // Key (Primary key) (length: 100)
        public string Value { get; set; } // Value (length: 500)
        public System.DateTime ChangedDate { get; set; } // ChangedDate
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public Configuration()
        {
            ChangedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Country
    public partial class Country
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Region> Regions { get; set; } // Region.PK_Region_Country

        public Country()
        {
            Regions = new System.Collections.Generic.List<Region>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // CustomerVisitCategory
    public partial class CustomerVisitCategory
    {
        public long Id { get; set; } // Id (Primary key)
        public string Description { get; set; } // Description (length: 100)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public CustomerVisitCategory()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Employee
    public partial class Employee
    {
        public long Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 20)
        public string FirstName { get; set; } // FirstName (length: 50)
        public string LastName { get; set; } // LastName (length: 50)
        public System.DateTime? BirthDate { get; set; } // BirthDate
        public long HomeBranchId { get; set; } // HomeBranchId
        public System.DateTime? JoinDate { get; set; } // JoinDate
        public string Address { get; set; } // Address (length: 500)
        public string Phone1 { get; set; } // Phone1 (length: 20)
        public string Phone2 { get; set; } // Phone2 (length: 20)
        public string Email1 { get; set; } // Email1 (length: 100)
        public string Email2 { get; set; } // Email2 (length: 100)
        public bool RestrictBranch { get; set; } // RestrictBranch
        public bool ShowStandardUnitPrice { get; set; } // ShowStandardUnitPrice
        public bool Active { get; set; } // Active
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        // Foreign keys
        public virtual Branch Branch { get; set; } // FK_Employee_Branch

        public Employee()
        {
            RestrictBranch = false;
            ShowStandardUnitPrice = true;
            Active = true;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // EmployeeVisitCategory
    public partial class EmployeeVisitCategory
    {
        public long Id { get; set; } // Id (Primary key)
        public string Description { get; set; } // Description (length: 100)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public EmployeeVisitCategory()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // EmployeeVisitResponse
    public partial class EmployeeVisitResponse
    {
        public long Id { get; set; } // Id (Primary key)
        public string Description { get; set; } // Description (length: 100)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public EmployeeVisitResponse()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // FactAgent
    public partial class FactAgent
    {
        public string Agentcode { get; set; } // agentcode (Primary key) (length: 15)
        public string Name { get; set; } // name (length: 50)
        public string Address { get; set; } // address (length: 122)
        public string City { get; set; } // city (length: 20)
        public string State { get; set; } // state (length: 20)
        public string Pincode { get; set; } // pincode (length: 20)
        public string Telephone { get; set; } // telephone (length: 20)
        public System.DateTime? LpurcDate { get; set; } // lpurc_date
        public System.DateTime? LpaidDate { get; set; } // lpaid_date
        public decimal? CreditLt { get; set; } // credit_lt
        public decimal? CreditNow { get; set; } // credit_now
        public decimal? Terms { get; set; } // terms
        public decimal? Commperc { get; set; } // commperc

        public FactAgent()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // FactCustomer
    public partial class FactCustomer
    {
        public string Agentcode { get; set; } // agentcode (length: 15)
        public string Custcode { get; set; } // custcode (Primary key) (length: 15)
        public string Name { get; set; } // name (length: 50)
        public string Address { get; set; } // address (length: 122)
        public string City { get; set; } // city (length: 20)
        public string State { get; set; } // state (length: 20)
        public string Country { get; set; } // country (length: 20)
        public string Pincode { get; set; } // pincode (length: 20)
        public string Telephone { get; set; } // telephone (length: 20)
        public string Fax { get; set; } // fax (length: 20)
        public string Salut { get; set; } // salut (length: 50)
        public string Notes { get; set; } // notes (length: 2147483647)
        public string Email { get; set; } // email (length: 50)
        public bool Dormant { get; set; } // dormant

        public FactCustomer()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // FactProduct
    public partial class FactProduct
    {
        public string Prodcode { get; set; } // prodcode (Primary key) (length: 15)
        public string Descript { get; set; } // descript (length: 50)
        public string UomPurch { get; set; } // uom_purch (length: 5)
        public string UomStk { get; set; } // uom_stk (length: 5)
        public string UomSale { get; set; } // uom_sale (length: 5)
        public decimal InStock { get; set; } // in_stock
        public decimal? CloseVal { get; set; } // close_val
        public decimal? CloseQty { get; set; } // close_qty
        public decimal Rate { get; set; } // rate
        public decimal OpeningQ { get; set; } // opening_q
        public decimal OpeningV { get; set; } // opening_v
        public string Adddesc { get; set; } // adddesc (length: 1073741823)
        public decimal? OnSorder { get; set; } // on_sorder
        public decimal? OnPorder { get; set; } // on_porder

        public FactProduct()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Fee
    public partial class Fee
    {
        public int Id { get; set; } // ID (Primary key)
        public string Description { get; set; } // Description (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public Fee()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Menu
    public partial class Menu
    {
        public long Id { get; set; } // Id (Primary key)
        public string FaIcon { get; set; } // FAIcon (length: 50)
        public string Title { get; set; } // Title (length: 50)
        public string NavigationTo { get; set; } // NavigationTo (length: 200)
        public int Seq { get; set; } // Seq
        public long? ParentMenuId { get; set; } // ParentMenuID
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Menu> Menus { get; set; } // Menu.FK_Menu_Menu
        public virtual System.Collections.Generic.ICollection<Role> Roles { get; set; } // Many to many mapping

        // Foreign keys
        public virtual Menu ParentMenu { get; set; } // FK_Menu_Menu

        public Menu()
        {
            Seq = 0;
            IsActive = true;
            Menus = new System.Collections.Generic.List<Menu>();
            Roles = new System.Collections.Generic.List<Role>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Project
    public partial class Project
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string Description { get; set; } // Description (length: 100)
        public string Address { get; set; } // Address (length: 200)
        public string CustomerCode { get; set; } // CustomerCode (length: 20)
        public string Email { get; set; } // Email (length: 500)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 50)
        public string FaxNumber { get; set; } // FaxNumber (length: 50)
        public string ContactPersonName { get; set; } // ContactPersonName (length: 50)
        public System.DateTime? StartDate { get; set; } // StartDate
        public int? PeriodInMonths { get; set; } // PeriodInMonths
        public string Notes { get; set; } // Notes (length: 2147483647)
        public int AgentEmployeeId1 { get; set; } // AgentEmployeeID1
        public int? AgentEmployeeId2 { get; set; } // AgentEmployeeID2
        public System.DateTime? CancelledWhen { get; set; } // CancelledWhen
        public System.DateTime? ClosedWhen { get; set; } // ClosedWhen
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public Project()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Region
    public partial class Region
    {
        public long Id { get; set; } // Id (Primary key)
        public long CountryId { get; set; } // CountryId
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        // Foreign keys
        public virtual Country Country { get; set; } // PK_Region_Country

        public Region()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Role
    public partial class Role
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 30)
        public bool IsSystemRole { get; set; } // IsSystemRole
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Menu> Menus { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<UserLogin> UserLogins { get; set; } // UserLogin.FK_UserLogin_Role

        public Role()
        {
            UserLogins = new System.Collections.Generic.List<UserLogin>();
            Menus = new System.Collections.Generic.List<Menu>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Taxonomy
    public partial class Taxonomy
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public long? ParentTaxonomyId { get; set; } // ParentTaxonomyId
        public bool Active { get; set; } // Active
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Taxonomy> Taxonomies { get; set; } // Taxonomy.FK_Taxonomoy_Taxonomy

        // Foreign keys
        public virtual Taxonomy ParentTaxonomy { get; set; } // FK_Taxonomoy_Taxonomy

        public Taxonomy()
        {
            Taxonomies = new System.Collections.Generic.List<Taxonomy>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Unit
    public partial class Unit
    {
        public long Id { get; set; } // Id (Primary key)
        public string Group { get; set; } // Group (length: 10)
        public string UnitName { get; set; } // UnitName (length: 10)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 20)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 20)

        public Unit()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // UserLogin
    public partial class UserLogin
    {
        public long Id { get; set; } // Id (Primary key)
        public string UserName { get; set; } // UserName (length: 50)
        public string Password { get; set; } // Password (length: 200)
        public long RoleId { get; set; } // RoleId
        public System.DateTime? LastLogin { get; set; } // LastLogin
        public System.DateTime? LastChangePassword { get; set; } // LastChangePassword
        public bool IsSystemUser { get; set; } // IsSystemUser
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Foreign keys
        public virtual Role Role { get; set; } // FK_UserLogin_Role

        public UserLogin()
        {
            IsSystemUser = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // Branch
    public partial class BranchConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Branch>
    {
        public BranchConfiguration()
            : this("dbo")
        {
        }

        public BranchConfiguration(string schema)
        {
            ToTable("Branch", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BranchCode).HasColumnName(@"BranchCode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address1).HasColumnName(@"Address1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.PostalCode).HasColumnName(@"PostalCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Phone1).HasColumnName(@"Phone1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Phone2).HasColumnName(@"Phone2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Email1).HasColumnName(@"Email1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Email2).HasColumnName(@"Email2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ComplaintType
    public partial class ComplaintTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ComplaintType>
    {
        public ComplaintTypeConfiguration()
            : this("dbo")
        {
        }

        public ComplaintTypeConfiguration(string schema)
        {
            ToTable("ComplaintType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Configuration
    public partial class ConfigurationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Configuration>
    {
        public ConfigurationConfiguration()
            : this("dbo")
        {
        }

        public ConfigurationConfiguration(string schema)
        {
            ToTable("Configuration", schema);
            HasKey(x => x.Key);

            Property(x => x.Key).HasColumnName(@"Key").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ChangedDate).HasColumnName(@"ChangedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Country
    public partial class CountryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Country>
    {
        public CountryConfiguration()
            : this("dbo")
        {
        }

        public CountryConfiguration(string schema)
        {
            ToTable("Country", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CustomerVisitCategory
    public partial class CustomerVisitCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CustomerVisitCategory>
    {
        public CustomerVisitCategoryConfiguration()
            : this("dbo")
        {
        }

        public CustomerVisitCategoryConfiguration(string schema)
        {
            ToTable("CustomerVisitCategory", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Employee
    public partial class EmployeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Employee>
    {
        public EmployeeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeConfiguration(string schema)
        {
            ToTable("Employee", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BirthDate).HasColumnName(@"BirthDate").HasColumnType("datetime").IsOptional();
            Property(x => x.HomeBranchId).HasColumnName(@"HomeBranchId").HasColumnType("bigint").IsRequired();
            Property(x => x.JoinDate).HasColumnName(@"JoinDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Phone1).HasColumnName(@"Phone1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Phone2).HasColumnName(@"Phone2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Email1).HasColumnName(@"Email1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Email2).HasColumnName(@"Email2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.RestrictBranch).HasColumnName(@"RestrictBranch").HasColumnType("bit").IsRequired();
            Property(x => x.ShowStandardUnitPrice).HasColumnName(@"ShowStandardUnitPrice").HasColumnType("bit").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);

            // Foreign keys
            HasRequired(a => a.Branch).WithMany(b => b.Employees).HasForeignKey(c => c.HomeBranchId).WillCascadeOnDelete(false); // FK_Employee_Branch
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // EmployeeVisitCategory
    public partial class EmployeeVisitCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeVisitCategory>
    {
        public EmployeeVisitCategoryConfiguration()
            : this("dbo")
        {
        }

        public EmployeeVisitCategoryConfiguration(string schema)
        {
            ToTable("EmployeeVisitCategory", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // EmployeeVisitResponse
    public partial class EmployeeVisitResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeVisitResponse>
    {
        public EmployeeVisitResponseConfiguration()
            : this("dbo")
        {
        }

        public EmployeeVisitResponseConfiguration(string schema)
        {
            ToTable("EmployeeVisitResponse", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // FactAgent
    public partial class FactAgentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FactAgent>
    {
        public FactAgentConfiguration()
            : this("dbo")
        {
        }

        public FactAgentConfiguration(string schema)
        {
            ToTable("FactAgent", schema);
            HasKey(x => x.Agentcode);

            Property(x => x.Agentcode).HasColumnName(@"agentcode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Address).HasColumnName(@"address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(122);
            Property(x => x.City).HasColumnName(@"city").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.State).HasColumnName(@"state").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Pincode).HasColumnName(@"pincode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Telephone).HasColumnName(@"telephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.LpurcDate).HasColumnName(@"lpurc_date").HasColumnType("date").IsOptional();
            Property(x => x.LpaidDate).HasColumnName(@"lpaid_date").HasColumnType("date").IsOptional();
            Property(x => x.CreditLt).HasColumnName(@"credit_lt").HasColumnType("decimal").IsOptional().HasPrecision(9,2);
            Property(x => x.CreditNow).HasColumnName(@"credit_now").HasColumnType("decimal").IsOptional().HasPrecision(9,2);
            Property(x => x.Terms).HasColumnName(@"terms").HasColumnType("decimal").IsOptional().HasPrecision(3,0);
            Property(x => x.Commperc).HasColumnName(@"commperc").HasColumnType("decimal").IsOptional().HasPrecision(5,2);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // FactCustomer
    public partial class FactCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FactCustomer>
    {
        public FactCustomerConfiguration()
            : this("dbo")
        {
        }

        public FactCustomerConfiguration(string schema)
        {
            ToTable("FactCustomer", schema);
            HasKey(x => x.Custcode);

            Property(x => x.Agentcode).HasColumnName(@"agentcode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Custcode).HasColumnName(@"custcode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Address).HasColumnName(@"address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(122);
            Property(x => x.City).HasColumnName(@"city").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.State).HasColumnName(@"state").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Country).HasColumnName(@"country").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Pincode).HasColumnName(@"pincode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Telephone).HasColumnName(@"telephone").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Fax).HasColumnName(@"fax").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Salut).HasColumnName(@"salut").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Notes).HasColumnName(@"notes").HasColumnType("text").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.Email).HasColumnName(@"email").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Dormant).HasColumnName(@"dormant").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // FactProduct
    public partial class FactProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FactProduct>
    {
        public FactProductConfiguration()
            : this("dbo")
        {
        }

        public FactProductConfiguration(string schema)
        {
            ToTable("FactProduct", schema);
            HasKey(x => x.Prodcode);

            Property(x => x.Prodcode).HasColumnName(@"prodcode").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Descript).HasColumnName(@"descript").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.UomPurch).HasColumnName(@"uom_purch").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(5);
            Property(x => x.UomStk).HasColumnName(@"uom_stk").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(5);
            Property(x => x.UomSale).HasColumnName(@"uom_sale").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(5);
            Property(x => x.InStock).HasColumnName(@"in_stock").HasColumnType("decimal").IsRequired().HasPrecision(13,4);
            Property(x => x.CloseVal).HasColumnName(@"close_val").HasColumnType("decimal").IsOptional().HasPrecision(12,2);
            Property(x => x.CloseQty).HasColumnName(@"close_qty").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Rate).HasColumnName(@"rate").HasColumnType("decimal").IsRequired().HasPrecision(13,4);
            Property(x => x.OpeningQ).HasColumnName(@"opening_q").HasColumnType("decimal").IsRequired().HasPrecision(14,4);
            Property(x => x.OpeningV).HasColumnName(@"opening_v").HasColumnType("decimal").IsRequired().HasPrecision(13,2);
            Property(x => x.Adddesc).HasColumnName(@"adddesc").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.OnSorder).HasColumnName(@"on_sorder").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.OnPorder).HasColumnName(@"on_porder").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Fee
    public partial class FeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fee>
    {
        public FeeConfiguration()
            : this("dbo")
        {
        }

        public FeeConfiguration(string schema)
        {
            ToTable("Fee", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Menu
    public partial class MenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menu>
    {
        public MenuConfiguration()
            : this("dbo")
        {
        }

        public MenuConfiguration(string schema)
        {
            ToTable("Menu", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FaIcon).HasColumnName(@"FAIcon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NavigationTo).HasColumnName(@"NavigationTo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Seq).HasColumnName(@"Seq").HasColumnType("int").IsRequired();
            Property(x => x.ParentMenuId).HasColumnName(@"ParentMenuID").HasColumnType("bigint").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.ParentMenu).WithMany(b => b.Menus).HasForeignKey(c => c.ParentMenuId).WillCascadeOnDelete(false); // FK_Menu_Menu
            HasMany(t => t.Roles).WithMany(t => t.Menus).Map(m =>
            {
                m.ToTable("RoleMenu", "dbo");
                m.MapLeftKey("MenuId");
                m.MapRightKey("RoleId");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Project
    public partial class ProjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Project>
    {
        public ProjectConfiguration()
            : this("dbo")
        {
        }

        public ProjectConfiguration(string schema)
        {
            ToTable("Project", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FaxNumber).HasColumnName(@"FaxNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContactPersonName).HasColumnName(@"ContactPersonName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.PeriodInMonths).HasColumnName(@"PeriodInMonths").HasColumnType("int").IsOptional();
            Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.AgentEmployeeId1).HasColumnName(@"AgentEmployeeID1").HasColumnType("int").IsRequired();
            Property(x => x.AgentEmployeeId2).HasColumnName(@"AgentEmployeeID2").HasColumnType("int").IsOptional();
            Property(x => x.CancelledWhen).HasColumnName(@"CancelledWhen").HasColumnType("datetime").IsOptional();
            Property(x => x.ClosedWhen).HasColumnName(@"ClosedWhen").HasColumnType("datetime").IsOptional();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Region
    public partial class RegionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Region>
    {
        public RegionConfiguration()
            : this("dbo")
        {
        }

        public RegionConfiguration(string schema)
        {
            ToTable("Region", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType("bigint").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);

            // Foreign keys
            HasRequired(a => a.Country).WithMany(b => b.Regions).HasForeignKey(c => c.CountryId).WillCascadeOnDelete(false); // PK_Region_Country
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Role
    public partial class RoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Role>
    {
        public RoleConfiguration()
            : this("dbo")
        {
        }

        public RoleConfiguration(string schema)
        {
            ToTable("Role", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.IsSystemRole).HasColumnName(@"IsSystemRole").HasColumnType("bit").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Taxonomy
    public partial class TaxonomyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Taxonomy>
    {
        public TaxonomyConfiguration()
            : this("dbo")
        {
        }

        public TaxonomyConfiguration(string schema)
        {
            ToTable("Taxonomy", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ParentTaxonomyId).HasColumnName(@"ParentTaxonomyId").HasColumnType("bigint").IsOptional();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);

            // Foreign keys
            HasOptional(a => a.ParentTaxonomy).WithMany(b => b.Taxonomies).HasForeignKey(c => c.ParentTaxonomyId).WillCascadeOnDelete(false); // FK_Taxonomoy_Taxonomy
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Unit
    public partial class UnitConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Unit>
    {
        public UnitConfiguration()
            : this("dbo")
        {
        }

        public UnitConfiguration(string schema)
        {
            ToTable("Unit", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Group).HasColumnName(@"Group").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.UnitName).HasColumnName(@"UnitName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UserLogin
    public partial class UserLoginConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserLogin>
    {
        public UserLoginConfiguration()
            : this("dbo")
        {
        }

        public UserLoginConfiguration(string schema)
        {
            ToTable("UserLogin", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType("bigint").IsRequired();
            Property(x => x.LastLogin).HasColumnName(@"LastLogin").HasColumnType("datetime").IsOptional();
            Property(x => x.LastChangePassword).HasColumnName(@"LastChangePassword").HasColumnType("datetime").IsOptional();
            Property(x => x.IsSystemUser).HasColumnName(@"IsSystemUser").HasColumnType("bit").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").HasColumnType("datetime").IsRequired();
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasRequired(a => a.Role).WithMany(b => b.UserLogins).HasForeignKey(c => c.RoleId).WillCascadeOnDelete(false); // FK_UserLogin_Role
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

